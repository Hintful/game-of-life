{"version":3,"sources":["Template.tsx","ViewTemplates.tsx","App.tsx","index.tsx"],"names":["templates","name","grid","ViewTemplates","props","className","onClick","loadTemplate","template","style","display","gridTemplateColumns","length","map","rows","y","col","x","width","height","backgroundColor","undefined","border","NUM_ROWS","NUM_COLS","neighbour_coords","App","useState","Array","fill","setGrid","running","setRunning","runningRef","useRef","wrapAround","setWrapAround","wrapAroundRef","current","simulationSpeed","setSimulationSpeed","speedRef","score","setScore","scoreRef","pageTop","resetGrid","curGrid","produce","gridCopy","originX","Math","floor","originY","scrollIntoView","behavior","getCurrentCellCount","count","a","runSimulation","iter_count","neighbour_cells","forEach","b","newX","newY","new_cells","console","log","setTimeout","color","ref","newGrid","padding","playUltra","disabled","type","min","max","value","onChange","e","Number","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be616f7e.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\n\r\nexport const templates = [\r\n  //******* Still lifes ********\r\n  {\r\n    name: 'Block',\r\n    grid: [\r\n      [1, 1],\r\n      [1, 1]]\r\n  },\r\n  {\r\n    name: 'Beehive',\r\n    grid: [\r\n      [0, 1, 1, 0],\r\n      [1, 0, 0, 1],\r\n      [0, 1, 1, 0]]\r\n  },\r\n  {\r\n    name: 'Loaf',\r\n    grid: [\r\n      [0, 1, 1, 0],\r\n      [1, 0, 0, 1],\r\n      [0, 1, 1, 0]]\r\n  },\r\n  {\r\n    name: 'Tub',\r\n    grid: [\r\n      [0, 1, 0],\r\n      [1, 0, 1],\r\n      [0, 1, 0]]\r\n  },\r\n\r\n  //******* Oscillators ********\r\n  {\r\n    name: 'Blinker',\r\n    grid: [\r\n      [1, 1, 1]]\r\n  },\r\n  {\r\n    name: 'Toad',\r\n    grid: [\r\n      [0, 1, 1, 1],\r\n      [1, 1, 1, 0]]\r\n  },\r\n  {\r\n    name: 'Beacon',\r\n    grid: [\r\n      [1, 1, 0, 0],\r\n      [1, 1, 0, 0],\r\n      [0, 0, 1, 1],\r\n      [0, 0, 1, 1]]\r\n  },\r\n  {\r\n    name: 'Pulsar',\r\n    grid: [\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]]\r\n  },\r\n  {\r\n    name: 'Pentadecathlon',\r\n    grid: [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [1, 0, 1],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [1, 0, 1],\r\n      [0, 1, 0],\r\n      [0, 1, 0]\r\n    ]\r\n  },\r\n\r\n\r\n  //******* Spaceships ********\r\n  {\r\n    name: 'Glider',\r\n    grid: [\r\n      [0, 1, 0],\r\n      [0, 0, 1],\r\n      [1, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    name: 'Light-weight Spaceship',\r\n    grid: [\r\n      [0, 1, 1, 1, 1],\r\n      [1, 0, 0, 0, 1],\r\n      [0, 0, 0, 0, 1],\r\n      [1, 0, 0, 1, 0]\r\n    ]\r\n  },\r\n\r\n\r\n  //****** Methuselahs ********\r\n  {\r\n    name: 'R-pentomino',\r\n    grid: [\r\n      [0, 1, 1],\r\n      [1, 1, 0],\r\n      [0, 1, 0]\r\n    ]\r\n  },\r\n  {\r\n    name: 'Diehard',\r\n    grid: [\r\n      [0, 0, 0, 0, 0, 0, 1, 0],\r\n      [1, 1, 0, 0, 0, 0, 0, 0],\r\n      [0, 1, 0, 0, 0, 1, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    name: 'Acorn',\r\n    grid: [\r\n      [0, 1, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 1, 0, 0, 0],\r\n      [1, 1, 0, 0, 1, 1, 1]\r\n    ]\r\n  },\r\n\r\n\r\n  //***** Guns **********\r\n  {\r\n    name: 'Gosper Glider Gun',\r\n    grid:[\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n      [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n      [1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n      [1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    ]\r\n  }\r\n]","import * as React from 'react';\r\nimport { GRID_WIDTH, GRID_HEIGHT } from './App';\r\n\r\nconst PREVIEW_GRID_WIDTH = 10;\r\nconst PREVIEW_GRID_HEIGHT = 10;\r\n\r\nexport interface ViewTemplatesProps {\r\n  template: { name: String; grid: Number[][]; },\r\n  loadTemplate: Function;\r\n}\r\n \r\nconst ViewTemplates: React.SFC<ViewTemplatesProps> = (props) => {\r\n  return (  \r\n    <div className=\"view-template\"\r\n      onClick={() => {\r\n        props.loadTemplate(props.template.grid)\r\n      }}\r\n    >\r\n      <div className=\"view-template-label\">\r\n        { props.template.name }\r\n      </div>\r\n      <hr />\r\n      <div className=\"view-template-grid\"\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: `repeat(${props.template.grid[0].length}, ${PREVIEW_GRID_WIDTH}px)`\r\n        }}>\r\n          {props.template.grid.map((rows, y) =>\r\n          rows.map((col, x) =>\r\n          <div key={`${props.template.name}-${y}-${x}`} style={{\r\n            width: PREVIEW_GRID_WIDTH,\r\n            height: PREVIEW_GRID_HEIGHT,\r\n            backgroundColor: props.template.grid[y][x] ? 'pink' : undefined,\r\n            border: 'solid 1px #454545'\r\n          }} />\r\n          ))}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ViewTemplates;","import React, { useCallback, useRef, useState } from 'react';\nimport produce from 'immer';\nimport \"react-awesome-button/dist/styles.css\";\nimport { templates } from './Template';\nimport ViewTemplates from './ViewTemplates';\n\nexport const NUM_ROWS = 50; // max 50\nexport const NUM_COLS = 120; // max 120\n\nexport const GRID_WIDTH = 15;\nexport const GRID_HEIGHT = 15;\n\nconst INITIAL_SIMULATION_SPEED = 300; // one tick = 300ms\n\n// Ultra mode default setting\nconst NUM_ITERATIONS_ULTRA = 100; // number of iterations to perform for ultra mode\n\nconst neighbour_coords = [\n  [-1, -1], [-1, 0], [-1, 1], [0, 1], [0, -1], [1, -1], [1, 0], [1, 1]\n]\n\nfunction App() {\n  const [grid, setGrid] = useState(() => {\n    return Array(NUM_ROWS).fill(Array(NUM_COLS).fill(0))\n  })\n  const [running, setRunning] = useState(false);\n  const runningRef = useRef(running);\n  const [wrapAround, setWrapAround] = useState(true);\n  const wrapAroundRef = useRef(wrapAround);\n  runningRef.current = running;\n  wrapAroundRef.current = wrapAround;\n\n  const [simulationSpeed, setSimulationSpeed] = useState(INITIAL_SIMULATION_SPEED);\n  const speedRef = useRef(simulationSpeed);\n  speedRef.current = simulationSpeed;\n\n  const [score, setScore] = useState(0);\n  const scoreRef = useRef(score);\n  scoreRef.current = score;\n\n  const [ultraScoreLabel, setUltraScoreLabel] = useState(\"\");\n\n  const pageTop = useRef<HTMLInputElement>(null);\n\n  \n\n  function resetGrid() {\n    setGrid((curGrid) => {\n      return (produce(curGrid, gridCopy => {\n        for (let y = 0; y < NUM_ROWS; y++) {\n          for (let x = 0; x < NUM_COLS; x++) {\n            gridCopy[y][x] = 0\n          }\n        }\n      }))\n    })\n    setScore(0);\n  }\n\n  function loadTemplate(template: number[][]) {\n    // load the template on the approximate center of the grid\n    const originX = Math.floor(NUM_COLS / 2) - Math.floor(template[0].length / 2);\n    const originY = Math.floor(NUM_ROWS / 2) - Math.floor(template.length / 2);\n\n    resetGrid();\n    setGrid((curGrid) => {\n      return (produce(curGrid, gridCopy => {\n        for (let y = 0; y < template.length; y++) {\n          for (let x = 0; x < template[0].length; x++) {\n            gridCopy[y + originY][x + originX] = template[y][x];\n          }\n        }\n      }))\n    })\n\n    if(pageTop && pageTop.current)\n      pageTop.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  function getCurrentCellCount() {\n    let count = 0; // init\n    for (let y = 0; y < NUM_ROWS; y++) {\n      for (let x = 0; x < NUM_COLS; x++) {\n        count += grid[y][x];\n      }\n    }\n    return count;\n  }\n\n  async function playUltra() {\n    setRunning(true);\n    runningRef.current = true;\n\n    const initial_cell_count = getCurrentCellCount();\n    const total_cell_score = runSimulation(NUM_ITERATIONS_ULTRA);\n\n    \n  }\n\n  // const runSimulation = useCallback(() => {\n  function runSimulation(iter_count: number): any {\n    if (!runningRef.current || iter_count === 0) { return score; }\n    else {\n      setGrid((curGrid) => {\n        return produce(curGrid, gridCopy => {\n          for (let y = 0; y < NUM_ROWS; y++) {\n            for (let x = 0; x < NUM_COLS; x++) {\n              let neighbour_cells = 0\n              neighbour_coords.forEach(([a, b]) => {\n                if (!wrapAroundRef.current) {\n                  const newY = y + a;\n                  const newX = x + b;\n                  if (newY >= 0 && newY < NUM_ROWS && newX >= 0 && newX < NUM_COLS) {\n                    neighbour_cells += curGrid[newY][newX];\n                  }\n                } else {\n                  const newY = (y + a + NUM_ROWS) % NUM_ROWS;\n                  const newX = (x + b + NUM_COLS) % NUM_COLS;\n                  neighbour_cells += curGrid[newY][newX];\n                }\n              })\n\n              if (neighbour_cells < 2 || neighbour_cells > 3) {\n                gridCopy[y][x] = 0; // kill cell\n              } else if (curGrid[y][x] === 0 && neighbour_cells === 3) {\n                gridCopy[y][x] = 1;\n                // setScore(scoreRef.current + 1);\n              }\n            }\n          }\n\n          // count new cells\n          let new_cells = 0\n          for (let y = 0; y < NUM_ROWS; y++) {\n            for (let x = 0; x < NUM_COLS; x++) {\n              // scoring scheme 1\n              if (gridCopy[y][x] && !curGrid[y][x]) {\n                new_cells += 1\n              }\n\n              // scoring scheme 2\n              // new_cells += gridCopy[y][x]\n            }\n          }\n          setScore(scoreRef.current + new_cells);\n          console.log(scoreRef.current);\n        })\n      })\n    }\n    setTimeout(() => runSimulation(iter_count - 1), speedRef.current);\n  // }, [])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"score\" style={{ color: 'white' }}>\n        Score: {score}\n      </div>\n      <div className=\"grid-container\" ref={pageTop}>\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${NUM_COLS}, ${GRID_WIDTH}px)`\n        }}>\n          {grid.map((rows, y) =>\n            rows.map((col: number[], x: number) =>\n              <div\n                onClick={() => {\n                  // all element must be updated simultaneously\n                  // create gridCopy to calculate values first, then copy over\n                  const newGrid = produce(grid, gridCopy => {\n                    gridCopy[y][x] = 1 - gridCopy[y][x]; // toggle\n                  });\n                  setGrid(newGrid)\n                }}\n                key={`${y}-${x}`}\n                style={{\n                  width: GRID_WIDTH,\n                  height: GRID_HEIGHT,\n                  backgroundColor: grid[y][x] ? 'skyblue' : undefined,\n                  border: 'solid 1px #232323'\n                }} />))}\n        </div>\n      </div>\n\n      <div className=\"menu-container\">\n        <div className=\"menu-button-container\">\n          <button\n            style={{\n              padding: \"10px 30px\"\n            }}\n            onClick={() => {\n              setRunning(!running);\n              runningRef.current = true;\n              runSimulation(-1); // -1 to run it indefinitely\n            }}\n          >{running ? 'Stop' : 'Start'}\n          </button>\n          <button\n            style={{\n              padding: \"10px 30px\"\n            }}\n            onClick={() => {\n              playUltra();\n            }}\n            disabled={runningRef.current}\n          >\n            ULTRA\n          </button>\n          <button\n            style={{\n              padding: \"10px 30px\"\n            }}\n            onClick={() => { resetGrid(); }}\n            disabled={runningRef.current}\n          >\n            Reset\n          </button>\n          <button\n            onClick={() => {\n              setWrapAround(!wrapAround);\n              wrapAroundRef.current = !wrapAround;\n            }}\n            disabled={runningRef.current}\n          >{wrapAround ? 'Wrap-around: ON' : 'Wrap-around: OFF'}\n          </button>\n        </div>\n        <div className=\"speed-control-container\">\n          <input type=\"range\" min={20} max={1000} value={simulationSpeed} onChange={(e) => {\n            setSimulationSpeed(Number(e.target.value));\n          }} disabled={runningRef.current} />\n          <div>{`${simulationSpeed}ms`}</div>\n        </div>\n        <div className=\"view-template-title\">\n          Templates\n        </div>\n        <div className=\"view-template-container\">\n\n          {templates.map(template => (\n            <ViewTemplates template={template} loadTemplate={loadTemplate} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}