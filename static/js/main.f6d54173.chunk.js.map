{"version":3,"sources":["Template.tsx","ViewTemplates.tsx","GridColor.tsx","ColorDescription.tsx","App.tsx","index.tsx"],"names":["templates","name","grid","ViewTemplates","props","className","onClick","ReactGA","event","category","action","template","loadTemplate","style","display","gridTemplateColumns","length","map","rows","y","col","x","width","height","backgroundColor","undefined","border","GridColor","ColorDescription","gridColors","gridColor","background","NUM_ROWS","NUM_COLS","neighbour_coords","App","useState","Array","fill","setGrid","running","setRunning","runningRef","useRef","wrapAround","setWrapAround","wrapAroundRef","current","simulationSpeed","setSimulationSpeed","speedRef","score","setScore","scoreRef","rainbowMode","setRainbowMode","pageTop","resetGrid","curGrid","produce","gridCopy","originX","Math","floor","originY","scrollIntoView","behavior","runSimulation","useCallback","neighbour_cells","forEach","a","b","newX","newY","new_cells","setTimeout","useEffect","window","GA_INIT","initialize","set","page","location","pathname","pageview","ref","color","toLocaleString","newGrid","min","padding","disabled","type","max","value","onChange","e","Number","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAMvB,CACED,KAAM,oBACNC,KAAM,CACJ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,E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","file":"static/js/main.f6d54173.chunk.js","sourcesContent":["export const templates = [\r\n  //******* Still lifes ********\r\n  {\r\n    name: 'Block',\r\n    grid: [\r\n      [1, 1],\r\n      [1, 1]]\r\n  },\r\n  {\r\n    name: 'Beehive',\r\n    grid: [\r\n      [0, 1, 1, 0],\r\n      [1, 0, 0, 1],\r\n      [0, 1, 1, 0]]\r\n  },\r\n  {\r\n    name: 'Loaf',\r\n    grid: [\r\n      [0, 1, 1, 0],\r\n      [1, 0, 0, 1],\r\n      [0, 1, 1, 0]]\r\n  },\r\n  {\r\n    name: 'Tub',\r\n    grid: [\r\n      [0, 1, 0],\r\n      [1, 0, 1],\r\n      [0, 1, 0]]\r\n  },\r\n\r\n  //******* Oscillators ********\r\n  {\r\n    name: 'Blinker',\r\n    grid: [\r\n      [1, 1, 1]]\r\n  },\r\n  {\r\n    name: 'Toad',\r\n    grid: [\r\n      [0, 1, 1, 1],\r\n      [1, 1, 1, 0]]\r\n  },\r\n  {\r\n    name: 'Beacon',\r\n    grid: [\r\n      [1, 1, 0, 0],\r\n      [1, 1, 0, 0],\r\n      [0, 0, 1, 1],\r\n      [0, 0, 1, 1]]\r\n  },\r\n  {\r\n    name: 'Pulsar',\r\n    grid: [\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]]\r\n  },\r\n  {\r\n    name: 'Pentadecathlon',\r\n    grid: [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [1, 0, 1],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [1, 0, 1],\r\n      [0, 1, 0],\r\n      [0, 1, 0]\r\n    ]\r\n  },\r\n\r\n\r\n  //******* Spaceships ********\r\n  {\r\n    name: 'Glider',\r\n    grid: [\r\n      [0, 1, 0],\r\n      [0, 0, 1],\r\n      [1, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    name: 'Light-weight Spaceship',\r\n    grid: [\r\n      [0, 1, 1, 1, 1],\r\n      [1, 0, 0, 0, 1],\r\n      [0, 0, 0, 0, 1],\r\n      [1, 0, 0, 1, 0]\r\n    ]\r\n  },\r\n\r\n\r\n  //****** Methuselahs ********\r\n  {\r\n    name: 'R-pentomino',\r\n    grid: [\r\n      [0, 1, 1],\r\n      [1, 1, 0],\r\n      [0, 1, 0]\r\n    ]\r\n  },\r\n  {\r\n    name: 'Diehard',\r\n    grid: [\r\n      [0, 0, 0, 0, 0, 0, 1, 0],\r\n      [1, 1, 0, 0, 0, 0, 0, 0],\r\n      [0, 1, 0, 0, 0, 1, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    name: 'Acorn',\r\n    grid: [\r\n      [0, 1, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 1, 0, 0, 0],\r\n      [1, 1, 0, 0, 1, 1, 1]\r\n    ]\r\n  },\r\n\r\n\r\n  //***** Guns **********\r\n  {\r\n    name: 'Gosper Glider Gun',\r\n    grid: [\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n      [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n      [1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n      [1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n      [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    ]\r\n  },\r\n\r\n  //******** Infinite Growth ***********\r\n  {\r\n    name: '10-cell Infinite Growth',\r\n    grid: [\r\n      [0,0,0,0,0,0,1,0],\r\n      [0,0,0,0,1,0,1,1],\r\n      [0,0,0,0,1,0,1,0],\r\n      [0,0,0,0,1,0,0,0],\r\n      [0,0,1,0,0,0,0,0],\r\n      [1,0,1,0,0,0,0,0]\r\n    ]\r\n  },\r\n  {\r\n    name: '2x12 Infinite Growth',\r\n    grid: [\r\n      [1,0,0,1,1,0,1,1,1,1,0,1],\r\n      [1,1,1,1,1,1,0,1,1,0,0,1]\r\n    ]\r\n  },\r\n  {\r\n    name: '5x5 Infinite Growth',\r\n    grid: [\r\n      [1,1,1,0,1],\r\n      [1,0,0,0,0],\r\n      [0,0,0,1,1],\r\n      [0,1,1,0,1],\r\n      [1,0,1,0,1]\r\n    ]\r\n  },\r\n  {\r\n    name: 'One-cell think Infinite Growth',\r\n    grid: [[1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1]]\r\n  }\r\n]","import * as React from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst PREVIEW_GRID_WIDTH = 10;\r\nconst PREVIEW_GRID_HEIGHT = 10;\r\n\r\nexport interface ViewTemplatesProps {\r\n  template: { name: String; grid: Number[][]; },\r\n  loadTemplate: Function;\r\n}\r\n \r\nconst ViewTemplates: React.SFC<ViewTemplatesProps> = (props) => {\r\n  return (  \r\n    <div className=\"view-template\"\r\n      onClick={() => {\r\n        ReactGA.event({\r\n          category: 'Game of Life',\r\n          action: `User Clicked ${props.template.name} Template`\r\n        });\r\n        props.loadTemplate(props.template.grid)\r\n      }}\r\n    >\r\n      <div className=\"view-template-label\">\r\n        { props.template.name }\r\n      </div>\r\n      <hr />\r\n      <div className=\"view-template-grid\"\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: `repeat(${props.template.grid[0].length}, ${PREVIEW_GRID_WIDTH}px)`\r\n        }}>\r\n          {props.template.grid.map((rows, y) =>\r\n          rows.map((col, x) =>\r\n          <div key={`${props.template.name}-${y}-${x}`} style={{\r\n            width: PREVIEW_GRID_WIDTH,\r\n            height: PREVIEW_GRID_HEIGHT,\r\n            backgroundColor: props.template.grid[y][x] ? 'pink' : undefined,\r\n            border: 'solid 1px #454545'\r\n          }} />\r\n          ))}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ViewTemplates;","export const GridColor = [\r\n  // undefined, // 0\r\n  // '#ffb6c1', // 1\r\n  // '#ff4d4d', // 2\r\n  // '#ffb733', // 3\r\n  // '#ffea33', // 4\r\n  // '#e1ff33', // 5\r\n  // '#aeff33', // 6\r\n  // '#7bff33', // 7\r\n  // '#aaeeff', // 8\r\n  // '#aad9ff', // 9\r\n  // '#aac4ff', // 10\r\n  // '#aaafff', // 11\r\n  // '#cfaaff', // 12\r\n  // '#e4aaff', // 13+\r\n\r\n  undefined,\r\n  '#ffffff',\r\n  '#ffc4c4',\r\n  '#ff8989',\r\n  '#ff4e4e',\r\n  '#ff1414',\r\n  '#ff6314',\r\n  '#ff8a14',\r\n  '#ffb114',\r\n  '#ffc514',\r\n  '#ffec14',\r\n  '#feff14',\r\n  '#d7ff14',\r\n  '#c3ff14',\r\n  '#9cff14',\r\n  '#88ff14',\r\n  '#45ff84',\r\n  '#19ffd0',\r\n  '#03fff5',\r\n  '#03f4ff',\r\n  '#03dfff',\r\n  '#03caff',\r\n  '#03b5ff',\r\n  '#03a0ff',\r\n  '#038bff',\r\n  '#0361ff',\r\n  '#034cff',\r\n  '#3f5bf0',\r\n  '#6364e7',\r\n  '#7b6ae1',\r\n  '#9370db',\r\n]\r\n","import * as React from 'react';\r\n\r\nconst GRID_SIZE = 12;\r\n\r\nexport interface ColorDescriptionProps {\r\n  gridColors: (String | undefined)[]\r\n}\r\n\r\nconst ColorDescription: React.SFC<ColorDescriptionProps> = (props) => {\r\n  return (\r\n    <div className=\"color-description-container\">\r\n      <div className=\"color-description\">\r\n        {props.gridColors.map(gridColor => (\r\n          <div className=\"color-grid\" style={{\r\n            width: GRID_SIZE,\r\n            height: GRID_SIZE,\r\n            border: \"1px solid rgba(0,0,0,0)\",\r\n            background: `${gridColor}`\r\n          }}>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"color-description-label\">\r\n        Cells change colors as they survive for more number of iterations\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ColorDescription;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport produce from 'immer';\nimport \"react-awesome-button/dist/styles.css\";\nimport { templates } from './Template';\nimport ViewTemplates from './ViewTemplates';\nimport { GridColor } from './GridColor';\nimport ColorDescription from './ColorDescription';\nimport ReactGA from 'react-ga';\n\nexport const NUM_ROWS = 50; // max 50\nexport const NUM_COLS = 120; // max 120\n\nexport const GRID_WIDTH = 15;\nexport const GRID_HEIGHT = 15;\n\nconst INITIAL_SIMULATION_SPEED = 300; // one tick = 300ms\n\n// Ultra mode default setting\nconst NUM_ITERATIONS_ULTRA = 100; // number of iterations to perform for ultra mode\n\nconst neighbour_coords = [\n  [-1, -1], [-1, 0], [-1, 1], [0, 1], [0, -1], [1, -1], [1, 0], [1, 1]\n]\n\n\nfunction usePageViews() {\n  useEffect(() => {\n    if(!(window as any).GA_INIT) {\n      ReactGA.initialize(\"UA-186165133-1\");\n      (window as any).GA_INIT = true;\n    }\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }, []);\n}\n\nfunction App() {\n  const [grid, setGrid] = useState(() => {\n    return Array(NUM_ROWS).fill(Array(NUM_COLS).fill(0))\n  })\n  const [running, setRunning] = useState(false);\n  const runningRef = useRef(running);\n  const [wrapAround, setWrapAround] = useState(true);\n  const wrapAroundRef = useRef(wrapAround);\n  runningRef.current = running;\n  wrapAroundRef.current = wrapAround;\n\n  const [simulationSpeed, setSimulationSpeed] = useState(INITIAL_SIMULATION_SPEED);\n  const speedRef = useRef(simulationSpeed);\n  speedRef.current = simulationSpeed;\n\n  const [score, setScore] = useState(0);\n  const scoreRef = useRef(score);\n  scoreRef.current = score;\n\n  const [ultraScoreLabel, setUltraScoreLabel] = useState(\"\");\n  const [rainbowMode, setRainbowMode] = useState(true);\n\n  const pageTop = useRef<HTMLInputElement>(null);\n\n  function resetGrid() {\n    setGrid((curGrid) => {\n      return (produce(curGrid, gridCopy => {\n        for (let y = 0; y < NUM_ROWS; y++) {\n          for (let x = 0; x < NUM_COLS; x++) {\n            gridCopy[y][x] = 0\n          }\n        }\n      }))\n    })\n    setScore(0);\n  }\n\n  function loadTemplate(template: number[][]) {\n    // load the template on the approximate center of the grid\n    const originX = Math.floor(NUM_COLS / 2) - Math.floor(template[0].length / 2);\n    const originY = Math.floor(NUM_ROWS / 2) - Math.floor(template.length / 2);\n\n    resetGrid();\n    setGrid((curGrid) => {\n      return (produce(curGrid, gridCopy => {\n        for (let y = 0; y < template.length; y++) {\n          for (let x = 0; x < template[0].length; x++) {\n            gridCopy[y + originY][x + originX] = template[y][x];\n          }\n        }\n      }))\n    })\n\n    if (pageTop && pageTop.current)\n      pageTop.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  function getCurrentCellCount() {\n    let count = 0; // init\n    for (let y = 0; y < NUM_ROWS; y++) {\n      for (let x = 0; x < NUM_COLS; x++) {\n        count += grid[y][x];\n      }\n    }\n    return count;\n  }\n\n  // async function playUltra() {\n  //   setRunning(true);\n  //   runningRef.current = true;\n\n  //   const initial_cell_count = getCurrentCellCount();\n  //   const total_cell_score = runSimulation(NUM_ITERATIONS_ULTRA);\n\n\n  // }\n\n  const runSimulation = useCallback(() => {\n    // function runSimulation(iter_count: number): any {\n    // if (!runningRef.current || iter_count === 0) { return score; }\n    if (!runningRef.current) { return; }\n    else {\n      setGrid((curGrid) => {\n        return produce(curGrid, gridCopy => {\n          for (let y = 0; y < NUM_ROWS; y++) {\n            for (let x = 0; x < NUM_COLS; x++) {\n              let neighbour_cells = 0\n              neighbour_coords.forEach(([a, b]) => {\n                if (!wrapAroundRef.current) {\n                  const newY = y + a;\n                  const newX = x + b;\n                  if (newY >= 0 && newY < NUM_ROWS && newX >= 0 && newX < NUM_COLS) {\n                    neighbour_cells += curGrid[newY][newX] > 0 ? 1 : 0;\n                  }\n                } else {\n                  const newY = (y + a + NUM_ROWS) % NUM_ROWS;\n                  const newX = (x + b + NUM_COLS) % NUM_COLS;\n                  neighbour_cells += curGrid[newY][newX] > 0 ? 1 : 0;\n                }\n              })\n\n              if (neighbour_cells < 2 || neighbour_cells > 3) { // kill cell\n                gridCopy[y][x] = 0;\n              } else if (curGrid[y][x] === 0 && neighbour_cells === 3) { // reproduction\n                gridCopy[y][x] = 1;\n              } else if (curGrid[y][x] >= 1 && neighbour_cells >= 2 && neighbour_cells <= 3) { // continuation\n                gridCopy[y][x] = curGrid[y][x] + 1;\n              }\n            }\n          }\n\n          // count new cells\n          let new_cells = 0\n          for (let y = 0; y < NUM_ROWS; y++) {\n            for (let x = 0; x < NUM_COLS; x++) {\n              // scoring scheme 1\n              if (gridCopy[y][x] && !curGrid[y][x]) {\n                new_cells += 1\n              }\n\n              // scoring scheme 2\n              // new_cells += gridCopy[y][x]\n            }\n          }\n          setScore(scoreRef.current + new_cells);\n          // console.log(scoreRef.current);\n        })\n      })\n    }\n    setTimeout(runSimulation, speedRef.current);\n    // setTimeout(() => runSimulation(iter_count - 1), speedRef.current);\n  }, [])\n  // }\n\n  usePageViews();\n\n  return (\n    <div className=\"App\" ref={pageTop}>\n      <div className=\"score\" style={{ color: 'white' }}>\n        Cells reproduced <strong>{score.toLocaleString()}</strong>\n      </div>\n      <div className=\"grid-container\">\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${NUM_COLS}, ${GRID_WIDTH}px)`\n        }}>\n          {grid.map((rows, y) =>\n            rows.map((col: number[], x: number) =>\n              <div\n                onClick={() => {\n                  // all element must be updated simultaneously\n                  // create gridCopy to calculate values first, then copy over\n                  const newGrid = produce(grid, gridCopy => {\n                    gridCopy[y][x] = 1 - gridCopy[y][x]; // toggle\n                  });\n                  setGrid(newGrid)\n                }}\n                key={`${y}-${x}`}\n                style={{\n                  width: GRID_WIDTH,\n                  height: GRID_HEIGHT,\n                  // backgroundColor: grid[y][x] ? 'skyblue' : undefined,\n                  backgroundColor: rainbowMode ? GridColor[Math.min(grid[y][x], 30)] : grid[y][x] ? 'skyblue' : undefined,\n                  border: 'solid 1px #232323'\n                }} />))}\n        </div>\n      </div>\n\n      <div style={{ display: rainbowMode ? \"inline\" : \"none\" }}>\n        <ColorDescription gridColors={GridColor} />\n      </div>\n\n      <div className=\"menu-container\">\n        <div className=\"menu-button-container\">\n          <button\n            style={{\n              padding: \"10px 30px\"\n            }}\n            onClick={() => {\n              ReactGA.event({\n                category: 'Game of Life',\n                action: 'User Clicked Start'\n              });\n              setRunning(!running);\n              runningRef.current = true;\n              // runSimulation(-1); // -1 to run it indefinitely\n              if (pageTop && pageTop.current)\n                pageTop.current.scrollIntoView({ behavior: \"smooth\" });\n              runSimulation();\n            }}\n          >\n            {running ? 'Stop' : 'Start'}\n          </button>\n          {/* <button\n            style={{\n              padding: \"10px 30px\"\n            }}\n            onClick={() => {\n              playUltra();\n            }}\n            disabled={runningRef.current}\n          >\n            ULTRA\n          </button> */}\n          <button\n            style={{\n              padding: \"10px 30px\"\n            }}\n            onClick={() => { resetGrid(); }}\n            disabled={runningRef.current}\n          >\n            Reset\n          </button>\n          <button\n            onClick={() => {\n              setWrapAround(!wrapAround);\n              wrapAroundRef.current = !wrapAround;\n              ReactGA.event({\n                category: 'Game of Life',\n                action: 'User Clicked Wrap-around Button'\n              });\n            }}\n            disabled={runningRef.current}\n          >{wrapAround ? 'Wrap-around: ON' : 'Wrap-around: OFF'}\n          </button>\n          <button\n            onClick={() => {\n              setRainbowMode(!rainbowMode);\n              ReactGA.event({\n                category: 'Game of Life',\n                action: 'User Clicked Color-mode Button'\n              });\n            }}\n            disabled={runningRef.current}\n          >\n            {rainbowMode ? 'Color Mode: Rainbow' : 'Color Mode: Monochromatic'}\n          </button>\n        </div>\n        <div className=\"speed-control-container\">\n          <input type=\"range\" min={20} max={1000} value={simulationSpeed} onChange={(e) => {\n            setSimulationSpeed(Number(e.target.value));\n          }} disabled={runningRef.current} />\n          <div>{`${simulationSpeed}ms`}</div>\n        </div>\n        <div className=\"view-template-title\">\n          Templates\n        </div>\n        <div className=\"view-template-container\">\n\n          {templates.map(template => (\n            <ViewTemplates template={template} loadTemplate={loadTemplate} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}